{
  "include": ["env.d.ts", "src/**/*", "src/**/*.vue", "auto-imports.d.ts", "components.d.ts"],
  // 数组类型，用于表示由 ts 管理的 文件 的具体路径，可以是相对或绝对路径。
  "files": [],
  //  “项目引用（Project References）” 功能，它允许用户为项目的不同部分使用不同的 TypeScript 配置。
  // 使用 references 字段引入的配置文件需要设置 composite: true 字段，并用 include 或 files 等等属性指明配置覆盖的文件范围。
  "references": [{
      "path": "./tsconfig.node.json" // 环境不一样使用的不一样
    },
    {
      "path": "./tsconfig.app.json" // 环境不一样使用的不一样
    }
  ],
  // "compilerOptions": {
  //   "target": "ESNext", // 将代码编译为最新版本的 JS
  //   "useDefineForClassFields": true, // 使用 Object.defineProperty 定义 class 中的属性，而非使用 obj.key = value 的形式定义属性
  //   "module": "ESNext", // 使用 ES Module 格式打包编译后的文件
  //   "moduleResolution": "Node", // 使用 Node 的模块解析策略
  //   "strict": true, // 启用所用严格的类型检查
  //   "jsx": "preserve", // 保留原始的 JSX 代码，不进行编译
  //   "sourceMap": true, // 生成 sourceMap 文件
  //   "resolveJsonModule": true, // 允许引入 JSON 文件
  //   "isolatedModules": true, // 该属性要求所有文件都是 ES Module 模块。
  //   "esModuleInterop": true, // 允许使用 import 引入使用 export = 导出的内容
  //   "lib": ["ESNext", "DOM"], // 引入 ES 最新特性和 DOM 接口的类型定义
  //   "skipLibCheck": true // 跳过对 .d.ts 文件的类型检查
  // }
}
